<hc:Window x:Class="MView.Windows.WorkspaceWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
           xmlns:behaviours="clr-namespace:MView.Behaviours"
           xmlns:controls="clr-namespace:MView.Controls"
           xmlns:converters="clr-namespace:MView.Converters"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:entities="clr-namespace:MView.Entities"
           xmlns:docker="clr-namespace:MView.Docker"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
           xmlns:runtime="clr-namespace:System;assembly=System.Runtime"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:local="clr-namespace:MView.Windows"
           mc:Ignorable="d"
           Title="Workspace"
           ShowTitle="False"
           Background="{DynamicResource SecondaryRegionBrush}"
           NonClientAreaBackground="{DynamicResource SecondaryRegionBrush}"
           ResizeMode="CanResize"
           WindowStartupLocation="CenterScreen"
           Height="700" Width="1000"
           Icon="/MView;component/Resources/mview_favicon_16.png"
           UseLayoutRounding="True" WindowState="Maximized">
    <hc:Window.Resources>
        <converters:TaskStatusToSolidColorBrushConverter x:Key="TaskStatusToSolidColorBrushConverter"/>
        <converters:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:TypeToImageConverter x:Key="TypeToImageConverter" />
        <runtime:Boolean x:Key="TRUE">True</runtime:Boolean>
        <runtime:Boolean x:Key="FALSE">False</runtime:Boolean>
    </hc:Window.Resources>

    <!--Menu Area-->
    <hc:Window.NonClientAreaContent>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="8 0 0 0">
            <Menu Background="{DynamicResource SecondaryRegionBrush}">
                <MenuItem Header="File(F)">
                    <MenuItem Header="Open(O)" Command="{Binding OpenCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="FolderOpen"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Save(S)" Command="{Binding SaveCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentSave"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Save As(A)" Command="{Binding SaveAsCommand}"/>

                    <MenuItem Header="Save All(L)" Command="{Binding SaveAllCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentSaveAll"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Close(C)" Command="{Binding CloseCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="Close"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                </MenuItem>

                <MenuItem Header="Edit(E)">
                    <MenuItem Header="Undo" Command="Undo">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="Undo"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Redo" Command="Redo">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="Redo"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Cut" Command="Cut">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentCut"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Copy" Command="Copy">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentCopy"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Paste" Command="Paste">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentPaste"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete" Command="Delete">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="Delete"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="View(V)">
                    <MenuItem Header="File Explorer" IsCheckable="True"
						      IsChecked="{Binding FileExplorer.IsVisible, Mode=TwoWay}" />
                    <MenuItem Header="File Properties" IsCheckable="True"
						      IsChecked="{Binding FileProperties.IsVisible, Mode=TwoWay}" />
                    <MenuItem Header="Report" IsCheckable="True"
						      IsChecked="{Binding Report.IsVisible, Mode=TwoWay}" />
                    <MenuItem Header="Toolbox" IsCheckable="True"
						      IsChecked="{Binding Toolbox.IsVisible, Mode=TwoWay}" />
                </MenuItem>

                <MenuItem Header="Help(H)">
                    <MenuItem Header="Manual(M)" Command="{Binding ManualCommand}"/>

                    <Separator/>

                    <MenuItem Header="MView Information(I)" Command="{Binding InformationCommand}"/>
                </MenuItem>
            </Menu>
        </StackPanel>
    </hc:Window.NonClientAreaContent>

    <!--Workspace Components-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition/>
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>

        <!--Toolbar-->
        <ToolBar Grid.Row="0" Margin="0" Padding="10 6" VerticalAlignment="Center">
            <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                    Command="{Binding OpenCommand}">
                <iconPacks:PackIconMaterial Foreground="{DynamicResource WarningBrush}" Width="14" Height="14" VerticalAlignment="Center" Kind="FolderOpen"/>
            </Button>
            
            <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                    Command="{Binding SaveCommand}">
                <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentSave"/>
            </Button>

            <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                    Command="{Binding SaveAllCommand}">
                <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="ContentSaveAll"/>
            </Button>

            <Separator Margin="6 0 6 0"/>

            <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="0 0 0 0" Padding="4 0 4 0"
                    Command="Undo">
                <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="UndoVariant"/>
            </Button>

            <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                    Command="Redo">
                <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".68" Kind="RedoVariant"/>
            </Button>
        </ToolBar>

        <!--AvalonDock Docking Manager-->
        <DockingManager
            Grid.Row="1"
            x:Name="dockManager"
			ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
            AnchorablesSource="{Binding Tools}" DocumentsSource="{Binding Files}"
			Theme="{Binding SelectedTheme}">
            <!--Pane Style Templates-->
            <DockingManager.LayoutItemTemplateSelector>
                <docker:PanesTemplateSelector>
                    <!--File Explorer Style-->
                    <docker:PanesTemplateSelector.FileExplorerViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0" Background="{DynamicResource RegionBrush}" >
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="2 0 0 0" Padding="4 0 4 0">
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Width="12" Height="12" VerticalAlignment="Center" Opacity=".68" Kind="Folder"/>
                                                <TextBlock VerticalAlignment="Center" Margin="8 0 0 0" FontSize="12" Opacity=".68" Text="Add"/>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                                            Command="{Binding RefreshCommand}">
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Width="12" Height="12" VerticalAlignment="Center" Opacity=".68" Kind="FileEdit"/>
                                                <TextBlock VerticalAlignment="Center" Margin="8 0 0 0" FontSize="12" Opacity=".68" Text="Rename"/>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                                            Command="{Binding RefreshCommand}">
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Width="12" Height="12" VerticalAlignment="Center" Opacity=".68" Kind="Delete"/>
                                                <TextBlock VerticalAlignment="Center" Margin="8 0 0 0" FontSize="12" Opacity=".68" Text="Delete"/>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent" Height="30" Margin="4 0 0 0" Padding="4 0 4 0"
                                            Command="{Binding RefreshCommand}">
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Width="12" Height="12" VerticalAlignment="Center" Opacity=".68" Kind="Refresh"/>
                                                <TextBlock VerticalAlignment="Center" Margin="8 0 0 0" FontSize="12" Opacity=".68" Text="Refresh"/>
                                            </StackPanel>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <Grid Grid.Row="1" Background="{DynamicResource RegionBrush}">
                                    <hc:SearchBar Height="30" BorderThickness="1" hc:InfoElement.Placeholder="Search" hc:InfoElement.Necessary="True" hc:BorderElement.CornerRadius="0"/>
                                </Grid>

                                <!--TreeView Data Templates-->
                                <controls:MultiSelectTreeView Grid.Row="2" Background="Transparent" BorderThickness="0" VerticalAlignment="Stretch"
                                          VirtualizingStackPanel.VirtualizationMode="Standard" VirtualizingStackPanel.IsVirtualizing="False"
                                          ItemsSource="{Binding Nodes}" SelectedItems="{Binding SelectedNodes, Mode=TwoWay}">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                            <Setter Property="controls:MultiSelectTreeView.IsItemSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Style.Triggers>
                                                <Trigger Property="controls:MultiSelectTreeView.IsItemSelected" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource DefaultBrush}" />
                                                </Trigger>
                                            </Style.Triggers>

                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate DataType="{x:Type entities:DirectoryItem}" ItemsSource="{Binding SubItems}">
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ItemDoubleClickCommand}"/>
                                                </StackPanel.InputBindings>
                                                
                                                <Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding Icon}"/>
                                                <TextBlock VerticalAlignment="Center" Margin="4 0 0 0" Text="{Binding Name}"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </controls:MultiSelectTreeView>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.FileExplorerViewTemplate>

                    <!--File Properties Style-->
                    <docker:PanesTemplateSelector.FilePropertiesViewTemplate>
                        <DataTemplate>
                            <hc:PropertyGrid Background="Transparent" SelectedObject="{Binding FileProperties}"/>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.FilePropertiesViewTemplate>

                    <!--Report Style-->
                    <docker:PanesTemplateSelector.ReportViewTemplate>
                        <DataTemplate>
                            <TextBox Background="Transparent" Margin="4" BorderThickness="0"
                                     HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                     HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible"
                                     AcceptsReturn="True" AcceptsTab="True" IsReadOnly="True"
                                     behaviours:TextBoxBehaviour.ScrollOnTextChanged="True"
                                     Text="{Binding Report, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.ReportViewTemplate>

                    <!--Toolbox-->
                    <docker:PanesTemplateSelector.ToolboxViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <hc:SearchBar Grid.Row="0" Background="{DynamicResource RegionBrush}" Height="30" BorderThickness="1" hc:InfoElement.Placeholder="Search" hc:InfoElement.Necessary="True" hc:BorderElement.CornerRadius="0"/>

                                <!--TreeView Data Templates-->
                                <TreeView Grid.Row="1" Background="Transparent" BorderThickness="0" VerticalAlignment="Stretch"
                                          VirtualizingStackPanel.VirtualizationMode="Standard" VirtualizingStackPanel.IsVirtualizing="False"
                                          ItemsSource="{Binding Nodes}">
                                    <TreeView.Resources>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                        </Style>

                                        <HierarchicalDataTemplate DataType="{x:Type entities:ToolboxCategory}" ItemsSource="{Binding SubItems}">
                                            <TextBlock Margin="8 4 0 4" Text="{Binding Name}"/>
                                        </HierarchicalDataTemplate>

                                        <HierarchicalDataTemplate DataType="{x:Type entities:ToolboxItem}">
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ItemDoubleClickCommand}"/>
                                                </StackPanel.InputBindings>

                                                <iconPacks:PackIconMaterial Width="14" Height="14" VerticalAlignment="Center" Opacity=".80" Kind="{Binding Icon}"/>
                                                <TextBlock VerticalAlignment="Center" Margin="4 0 0 0" Text="{Binding Name}"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.ToolboxViewTemplate>

                    <!--Audio File Style-->
                    <docker:PanesTemplateSelector.AudioFileViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <!--Contents Area-->
                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="100"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">

                                    </Grid>

                                    <GridSplitter Grid.Row="1" Background="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="True" Height="1"/>

                                    <Border Grid.Row="2" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0 1 0 0">
                                        <Grid Background="{DynamicResource SecondaryRegionBrush}">
                                            <StackPanel Orientation="Vertical">
                                                <Slider Background="White" VerticalAlignment="Center" Value="40" Maximum="100"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <!--Status Bar-->
                                <StatusBar Grid.Row="1">
                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FilePath}"/>
                                    </StatusBarItem>

                                    <Separator/>

                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FileSizeString}"/>
                                    </StatusBarItem>
                                </StatusBar>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.AudioFileViewTemplate>

                    <!--General File Style-->
                    <docker:PanesTemplateSelector.GeneralFileViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <!--Contents Area-->
                                <TextBox Grid.Row="0" Background="Transparent" Margin="4" BorderThickness="0"
                                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Top"
                                         VerticalScrollBarVisibility="Visible"
                                         AcceptsReturn="True" AcceptsTab="True"
                                         Text="{Binding TextContent, Mode=TwoWay}"/>

                                <!--Status Bar-->
                                <StatusBar Grid.Row="1">
                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FilePath}"/>
                                    </StatusBarItem>

                                    <Separator/>

                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FileSizeString}"/>
                                    </StatusBarItem>
                                </StatusBar>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.GeneralFileViewTemplate>

                    <!--Image File Style-->
                    <docker:PanesTemplateSelector.ImageFileViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <!--Contents Area-->
                                <hc:ImageViewer Grid.Row="0" Background="{Binding BackgroundBrush}" BorderThickness="0"
                                                ImageSource="{Binding ImageFilePath}"/>

                                <!--Status Bar-->
                                <StatusBar Grid.Row="1">
                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FilePath}"/>
                                    </StatusBarItem>
                                    
                                    <Separator/>

                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FileSizeString}"/>
                                    </StatusBarItem>

                                    <Separator/>

                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding ImageSizeString}"/>
                                    </StatusBarItem>
                                </StatusBar>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.ImageFileViewTemplate>

                    <!--Script File Style-->
                    <docker:PanesTemplateSelector.ScriptFileViewTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <!--Contents Area-->
                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="150"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <DataGrid HeadersVisibility="All" RowHeaderWidth="60" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn IsReadOnly="True" Width="80" CanUserResize="False" Header="Index"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>

                                    <GridSplitter Grid.Row="1" Background="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="True" Height="1"/>

                                    <Border Grid.Row="2" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0 1 0 0">
                                        <Grid Background="{DynamicResource SecondaryRegionBrush}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="30*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Margin="4" Text="Test1"/>
                                            <GridSplitter Grid.Column="1" Background="{DynamicResource BorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="1"/>
                                            <TextBlock Grid.Column="2" Margin="4" Text="Test2"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <!--Status Bar-->
                                <StatusBar Grid.Row="1">
                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FilePath}"/>
                                    </StatusBarItem>

                                    <Separator/>

                                    <StatusBarItem>
                                        <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" Margin="4 0 4 0" Text="{Binding FileSizeString}"/>
                                    </StatusBarItem>
                                </StatusBar>
                            </Grid>
                        </DataTemplate>
                    </docker:PanesTemplateSelector.ScriptFileViewTemplate>
                </docker:PanesTemplateSelector>
            </DockingManager.LayoutItemTemplateSelector>

            <DockingManager.LayoutItemContainerStyleSelector>
                <docker:PanesStyleSelector>
                    <docker:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanClose" Value="True" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter={StaticResource FALSE}}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                        </Style>
                    </docker:PanesStyleSelector.ToolStyle>

                    <docker:PanesStyleSelector.FileStyle>
                        <Style TargetType="{x:Type LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.FilePath}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                        </Style>
                    </docker:PanesStyleSelector.FileStyle>
                </docker:PanesStyleSelector>
            </DockingManager.LayoutItemContainerStyleSelector>

            <DockingManager.LayoutUpdateStrategy>
                <docker:LayoutInitializer />
            </DockingManager.LayoutUpdateStrategy>
        </DockingManager>

        <Grid Grid.Row="2" Background="{Binding Status, Converter={StaticResource TaskStatusToSolidColorBrushConverter}}">
            <StackPanel Orientation="Horizontal" Margin="6 0 6 0">
                <iconPacks:PackIconMaterial Width="12" Height="12" VerticalAlignment="Center" Kind="Console"/>
                <TextBlock VerticalAlignment="Center" Margin="6 0 0 0" Text="{Binding StatusString}"/>
            </StackPanel>
        </Grid>
    </Grid>
</hc:Window>
